# [cp] Documentation for Settings App

- AI involvement - 
This project was heavily assisted by AI. 
However, all code was reviewed and edited by me.
Co-pilot is good but it isn't there yet.

This file specifically, was also generated by Co-Pilot as a test. 
It made a hash of this and made stuff up. ;)


This folder contains files related to the `settings_app` module of the Assets-Production project. 
Below is a brief description of the files in this folder:

# Install notes:
1. Python3.12 is not supported. Install the alternative python3.11 using deadsnakes.
2. Install Python3.11:
   sudo add-apt-repository ppa:deadsnakes/ppa
   apt update
   sudo apt install python3.11
3. Install kivy for python 3.12: 
   sudo apt install python3-kivy
3a.Install kivy for python 3.11:
   sudo apt install python3.11-venv
   python3.11 -m venv .venv
   source .venv/bin/activate
   pip3 install --upgrade pip wheel cython setuptools
   pip install kivy[base] screeninfo

    

   If you are using VSCpde, do the following:



## Files

1. **settings_app.py**  
    The main file to run.
    
2. **readme.txt**  
    This file provides documentation for the `settings_app` folder.

3. **main_window.py**  
    The main window of the app. Written in TKinter. 

4. **app_config.py**  
    A class for managing the application configuration. 
    It is a singleton.
    As the app can't write in its home dir, we have to locate the /home/<user>/.vegastrike folder (or similar).
    We write a file there (settings_app.json), to store a link to the assets folder and other app settings.

5. **game_config.py**  
    A class for managing the actual game configuration.
    It is a singleton.
    We have two configuration files - assets and user.
    We get values from both. We set values to user only.
    We do not support vegastrike.config (xml).

---

## TODO
Again, co-pilot just made stuff up.

- [ ] What happens if .vegastrike has not yet been run. App doesn't create it yet.
- [ ] Dynamically generate an advanced section.
- [ ] Test multi-screen functionality.

---

## Issues

- Some stuff is hardcoded strings. Consider extracting to a constant.
- Code lack any real error handling.
- Missing a lot of unit tests.
- GUI isn't nice at all. Even with themes.
- In Kivy, the default scrollbar drag direction follows natural scrolling â€” dragging the scrollbar thumb up scrolls up, 
  and dragging it down scrolls down. Reversing that is not supported out-of-the-box.
- In Kivy window, buttons are only sometimes responsive. Not everywhere is clickable?